[
    {
        "speakers": [
            {
                "details": "", 
                "twitter": "", 
                "name": "Matthew Desmond", 
                "slug": "matthew-desmond"
            }
        ], 
        "abstract": "<p>Git is becoming the defacto place to store source code. If you want to integrate and stay up to date with code, you should also be keeping your documentation there. This tutorial will take you from feeling uneasy about interacting with git to making it feel like something you can 'git' the hang of.</p> <p><em>Learn how to Git</em> with Matt Desmond, who is a technical writer-turned-trainer for GitHub. Take part in hands-on keyboard exercises that will removes the guesswork out of managing your development process using Git.</p> <p>After attending this session, students will:</p> <ul> <li><p>Conquer the different Git commands</p></li> <li><p>Actually understand what that StackOverflow answer means</p></li> <li><p>Be able to have a conversation about branching strategies (and understand what a branch even is)</p></li> <li><p>Become a collaboration machine!</p></li></ul><p>Tickets to this workshop are sold seperately. You can <a href='https://ti.to/writethedocs/write-the-docs-na-2017/with/yzgjvsp7zcw'>buy your ticket here</a>.</p>", 
        "title": "Workshop: Learn how to Git"
    }, 
    {
        "speakers": [
            {
                "details": "", 
                "twitter": "", 
                "name": "Heidi Waterhouse", 
                "slug": "heidi-waterhouse"
            }
        ], 
        "abstract": "<p>What is a documentation structure, and why does it matter to developers?</p> <p>Lots of developers get asked to write their own documentation, especially internal documentation and onboarding. In theory, this is good because they know the problems they are writing about and don't need to spend time explaining them. In practice, developers avoid this work because they don't have a good idea of how to start and can't evaluate whether they have succeeded.</p> <p>This workshop is designed to teach you a few basic theories of technical documentation, such as task-based topics, reusable content, and writing for an audience. After the overview, you'll learn techniques for writing bug reports, error messages, and onboarding instructions in a tool-agnostic, repeatable way. You'll leave this workshop with a handful of techniques, templates, and tests that will improve your team\u2019s communication and your life as a developer.</p> <ul> <li><p>What is structure?</p></li> <li><p>What do I really need to know?</p></li> <li><p>How to write an error message</p></li> <li><p>How to write a bug report</p></li> <li><p>What is transparent to writers?</p></li> <li><p>How do you interact with the team around building stuff.</p></li> </ul> <p>The structure will be 60-90 minutes for basics, and then the rest for workshops.</p><p>Tickets to this workshop are sold seperately. You can <a href='https://ti.to/writethedocs/write-the-docs-na-2017/with/uhk2elxibho'>buy your ticket here</a>.</p>", 
        "title": "Workshop: Structuring and writing documentation"
    }
]